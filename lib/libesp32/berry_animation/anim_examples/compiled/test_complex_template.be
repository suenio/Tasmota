# Generated Berry code from Animation DSL
# Source: test_complex_template.anim
# 
# This file was automatically generated by compile_all_examples.sh
# Do not edit manually - changes will be overwritten

import animation

# Complex template test
# Template function: rainbow_pulse
def rainbow_pulse_template(engine, pal1_, pal2_, duration_, back_color_)
  var cycle_color_ = animation.color_cycle(engine)
  cycle_color_.palette = pal1_
  cycle_color_.cycle_period = duration_
  # Create pulsing animation
  var pulse_ = animation.pulsating_animation(engine)
  pulse_.color = cycle_color_
  pulse_.period = duration_
  # Create background
  var background_ = animation.solid(engine)
  background_.color = back_color_
  background_.priority = 1
  # Set pulse priority higher
  pulse_.priority = 10
  # Run both animations
  engine.add(background_)
  engine.add(pulse_)
end

animation.register_user_function('rainbow_pulse', rainbow_pulse_template)

# Create palettes
# Auto-generated strip initialization (using Tasmota configuration)
var engine = animation.init_strip()

var fire_palette_ = bytes("00000000" "80FF0000" "FFFFFF00")
var ocean_palette_ = bytes("00000080" "800080FF" "FF00FFFF")
# Use the template
rainbow_pulse_template(engine, fire_palette_, ocean_palette_, 3000, 0xFF001100)
engine.run()

# Compilation warnings:
# Line 28: Template 'rainbow_pulse' parameter 'pal2' is declared but never used in the template body.


#- Original DSL source:
# Complex template test

template rainbow_pulse {
  param pal1 type palette
  param pal2 type palette
  param duration
  param back_color type color
  
  # Create color cycle using first palette
  color cycle_color = color_cycle(palette=pal1, cycle_period=duration)
  
  # Create pulsing animation
  animation pulse = pulsating_animation(
    color=cycle_color
    period=duration
  )
  
  # Create background
  animation background = solid(color=back_color)
  background.priority = 1
  
  # Set pulse priority higher
  pulse.priority = 10
  
  # Run both animations
  run background
  run pulse
}

# Create palettes
palette fire_palette = [
  (0, 0x000000)
  (128, 0xFF0000)
  (255, 0xFFFF00)
]

palette ocean_palette = [
  (0, 0x000080)
  (128, 0x0080FF)
  (255, 0x00FFFF)
]

# Use the template
rainbow_pulse(fire_palette, ocean_palette, 3s, 0x001100)
-#
