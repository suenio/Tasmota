# Generated Berry code from Animation DSL
# Source: demo_shutter_rainbow_leftright.anim
# 
# This file was automatically generated by compile_all_examples.sh
# Do not edit manually - changes will be overwritten

import animation

# Demo Shutter Rainbow
#
# Shutter from left to right iterating in all colors, then right to left
# Template function: shutter_lr
def shutter_lr_template(engine, colors_, duration_)
  var strip_len_ = animation.strip_length(engine)
  var shutter_size_ = (def (engine)
    var provider = animation.sawtooth(engine)
    provider.min_value = 0
    provider.max_value = strip_len_
    provider.duration = duration_
    return provider
  end)(engine)
  var col1_ = animation.color_cycle(engine)
  col1_.palette = colors_
  col1_.cycle_period = 0
  var col2_ = animation.color_cycle(engine)
  col2_.palette = colors_
  col2_.cycle_period = 0
  col2_.next = 1
  # shutter moving from left to right
  var shutter_lr_animation_ = animation.beacon_animation(engine)
  shutter_lr_animation_.color = col2_
  shutter_lr_animation_.back_color = col1_
  shutter_lr_animation_.pos = 0
  shutter_lr_animation_.beacon_size = shutter_size_
  shutter_lr_animation_.slew_size = 0
  shutter_lr_animation_.priority = 5
  var shutter_seq_ = animation.SequenceManager(engine, -1)
    .push_closure_step(def (engine) shutter_size_.start(engine.time_ms) end)
    .push_play_step(shutter_lr_animation_, animation.resolve(duration_))
    .push_closure_step(def (engine) col1_.next = 1 end)
    .push_closure_step(def (engine) col2_.next = 1 end)
  engine.add(shutter_seq_)
end

animation.register_user_function('shutter_lr', shutter_lr_template)

# Auto-generated strip initialization (using Tasmota configuration)
var engine = animation.init_strip()

var rainbow_with_white_ = bytes(
  "FFFF0000"
  "FFFFA500"
  "FFFFFF00"
  "FF008000"  # comma left on-purpose to test transpiler
  "FF0000FF"  # need for a lighter blue
  "FF4B0082"
  "FFFFFFFF"
)
shutter_lr_template(engine, rainbow_with_white_, 1500)
engine.run()


#- Original DSL source:
# Demo Shutter Rainbow
#
# Shutter from left to right iterating in all colors, then right to left
  
template shutter_lr {
    param colors type palette
    param duration
  
    set strip_len = strip_length()
    set shutter_size = sawtooth(min_value = 0, max_value = strip_len, duration = duration)
  
    color col1 = color_cycle(palette=colors, cycle_period=0)
    color col2 = color_cycle(palette=colors, cycle_period=0)
    col2.next = 1
  
    # shutter moving from left to right
    animation shutter_lr_animation = beacon_animation(
      color = col2
      back_color = col1
      pos = 0
      beacon_size = shutter_size
      slew_size = 0
      priority = 5
    )
  
    sequence shutter_seq repeat forever {
      restart shutter_size
      play shutter_lr_animation for duration
      col1.next = 1
      col2.next = 1
    }
    
    run shutter_seq
  }
  
  palette rainbow_with_white = [ red
    orange
    yellow
    green,      # comma left on-purpose to test transpiler
    blue        # need for a lighter blue
    indigo
    white
  ]
  
  shutter_lr(rainbow_with_white, 1.5s)
  
-#
